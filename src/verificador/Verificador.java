/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package verificador;

import controller.controllerBD;
import java.awt.PopupMenu;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Rico
 */
public class Verificador extends javax.swing.JFrame {
    
     public static controllerBD controller;
     public static ResultSet rs;
    /**
     * Creates new form Verificador
     */
    public Verificador(String f1, String f2, String f,String g) {
        initComponents();
        this.setLocationRelativeTo(null);
        try {                                         
            try {
                // TODO
                controller = new controllerBD();
                controller.CrearConexion();
                
            } catch (SQLException ex) {
                Logger.getLogger(Verificador.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            String sql = "SELECT * FROM DEFUNCIONES WHERE DEFFEC_CRE between #"+f1+"# AND #"+f2+"# "+f+";";
           
            DefaultTableModel modelo, modelo2;
            modelo = new DefaultTableModel();
            modelo2 = new DefaultTableModel();
            modelo.addColumn("Folios Def");
            modelo2.addColumn("Folios Fet");
            Object []object = new Object[8];
            Object []object3 = new Object[1];
            int cont = 0;
            rs = controller.mandarSql(sql);
            while (rs.next()) {
                object[0]  = rs.getString(2);
                modelo.addRow(object);
                cont++;
            }
            rs.first();
            String cad = "";
            cad = Integer.toString(cont);
            num.setText(cad);
            
            jTable1.setModel(modelo);
            
            sql = "SELECT * FROM DEFFETAL WHERE FETFEC_CRE between #"+f1+"# AND #"+f2+"# "+g+";";
            Object []object2 = new Object[8];
             int cont2 = 0;
            rs = controller.mandarSql(sql);
            while (rs.next()) {
                object2[0] = rs.getString(1);
                modelo2.addRow(object2);
                cont2++;
            }
            String cad2 = "";
            cad2 = Integer.toString(cont2);
            num2.setText(cad2);
            jTable4.setModel(modelo2);
            
        } catch (SQLException ex) {
            Logger.getLogger(Verificador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private Verificador() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable9 = new javax.swing.JTable();
        jTextField3 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable10 = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new javax.swing.JTable();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTable12 = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable13 = new javax.swing.JTable();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTable14 = new javax.swing.JTable();
        num = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        num2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "2014"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Defunciones");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Fetales");

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "2015"
            }
        ));
        jScrollPane6.setViewportView(jTable6);

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "2016"
            }
        ));
        jScrollPane7.setViewportView(jTable7);

        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "2017"
            }
        ));
        jScrollPane8.setViewportView(jTable8);

        jTable9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Otra Fecha"
            }
        ));
        jScrollPane9.setViewportView(jTable9);

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton3.setText("Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        jTable10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "2014"
            }
        ));
        jScrollPane10.setViewportView(jTable10);

        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "2015"
            }
        ));
        jScrollPane11.setViewportView(jTable11);

        jTable12.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "2016"
            }
        ));
        jScrollPane12.setViewportView(jTable12);

        jTable13.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "2017"
            }
        ));
        jScrollPane13.setViewportView(jTable13);

        jTable14.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Otra Fecha"
            }
        ));
        jScrollPane14.setViewportView(jTable14);

        num.setText("*");

        jLabel3.setText("Folios");

        num2.setText("*");

        jLabel5.setText("Folios");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(147, 147, 147)
                                        .addComponent(jLabel5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(num2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel3)
                    .addComponent(num))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(num2))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 /*A éste método se le envía el texto a buscar obtenido del JTextField,
      considerar si es necesario estandarizar a mayúsculas o minúsculas,
      además se envía la tabla en la que se desea que se realice el filtro, 
      de este modo el método se puede reutilizar en diferentes tablas*/
filtro(jTextField1.getText().toUpperCase(), jTable1);

if(jTextField1.getText().length()<9){
}
else{
    pasarDato();
}
jTextField1.setText("");
filtro(jTextField1.getText().toUpperCase(), jTable1);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
     /*A éste método se le envía el texto a buscar obtenido del JTextField,
      considerar si es necesario estandarizar a mayúsculas o minúsculas,
      además se envía la tabla en la que se desea que se realice el filtro, 
      de este modo el método se puede reutilizar en diferentes tablas*/
filtro(jTextField1.getText().toUpperCase(), jTable1);


if(jTextField1.getText().length()<9){
}
else{
    pasarDato();
}
jTextField1.setText("");
filtro(jTextField1.getText().toUpperCase(), jTable1);
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
filtro(jTextField3.getText().toUpperCase(), jTable4);

if(jTextField3.getText().length()<8){
}
else{
    pasarDatoFetal();
}
jTextField3.setText("");
filtro(jTextField3.getText().toUpperCase(), jTable4);    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
   filtro(jTextField3.getText().toUpperCase(), jTable4);

if(jTextField3.getText().length()<8){
}
else{
    pasarDatoFetal();
}
jTextField3.setText("");
filtro(jTextField3.getText().toUpperCase(), jTable4);
    }//GEN-LAST:event_jButton3ActionPerformed

    /* declarar la siguiente variable en la clase*/
DefaultTableModel dm;

/* Método filtro*/
private void filtro(String consulta, JTable jtableBuscar){
        dm = (DefaultTableModel) jtableBuscar.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(dm);
        jtableBuscar.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(consulta));
        
     
        
     
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Verificador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Verificador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Verificador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Verificador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Verificador().setVisible(true);
            }
        });
    }

    public void pasarDato(){
/* Asigna tblOrigen y tblDestino para que apunte a los objetos JTable 
   del que necesitas leer los datos */
// tblOrigen = miObjetoJTableDeOrigen;
// tblDestino = miObjetoJTableDeDestino;
/*
   Aquí viene la parte interesante:
   Lee cada fila seleccionada de la tabla de origen 
   y agrégalo a la tabla de destino
 */
    jTable1.selectAll();
    



 DefaultTableModel tmO = (DefaultTableModel) jTable1.getModel(),
                   tmD1 = (DefaultTableModel) jTable2.getModel(),
                   tmD2 = (DefaultTableModel) jTable6.getModel(),
                   tmD3 = (DefaultTableModel) jTable7.getModel(),
                   tmD4 = (DefaultTableModel) jTable8.getModel(),
                   tmD5 = (DefaultTableModel) jTable9.getModel();
 /* Si utilizas otro TableModel, el tipo de estas variables debe ser el mismo 
    que el TableModel que utilizas.
  */
 // Si tienes filas seleccionadas en la tabla de origen:
 
 if(jTable1.getSelectedRowCount() > 0) {
     // 1) Obtén los índices de las filas seleccionadas.
     int[] indices = jTable1.getSelectedRows();
     

     
     // 2) Para cada fila, crea un Array para guardar los valores... 
     for(int i : indices) {
         Object[] fila = new Object[1];
         // ... y guarda los valores de la fila de origen
            
             fila[0] = jTextField1.getText();
             
             
             // tabla1 :es el nombre de tu tabla

             //comprovacion si ya se agrego
        String id = jTextField1.getText();
        System.out.println(jTable1.getRowCount());
        
        Boolean aviso = false; 
        
        int e=0;
        for(e = 0; e<jTable2.getRowCount(); e++){
            if(jTable2.getValueAt(e, 0).equals(id)){
            JOptionPane.showMessageDialog(null, "El folio " + id + " ya existe en la tabla.");
            aviso = true;

            }
        }
        for(e = 0; e<jTable6.getRowCount(); e++){
            if(jTable6.getValueAt(e, 0).equals(id)){
            JOptionPane.showMessageDialog(null, "El folio " + id + " ya existe en la tabla.");
            aviso = true;
            }
        }
        for(e = 0; e<jTable7.getRowCount(); e++){
            if(jTable7.getValueAt(e, 0).equals(id)){
            JOptionPane.showMessageDialog(null, "El folio " + id + " ya existe en la tabla.");
            aviso = true;
            }
        }
        for(e = 0; e<jTable8.getRowCount(); e++){
            if(jTable8.getValueAt(e, 0).equals(id)){
            JOptionPane.showMessageDialog(null, "El folio " + id + " ya existe en la tabla.");
            aviso = true;
            }
        }
        for(e = 0; e<jTable9.getRowCount(); e++){
            if(jTable9.getValueAt(e, 0).equals(id)){
            JOptionPane.showMessageDialog(null, "El folio " + id + " ya existe en la tabla.");
            aviso = true;
            }
        }
             
             
             
         // 3) Agrega la fila al TableModel de la tabla de destino
         if(aviso == false){

         int numero=0;
         
         numero = Integer.parseInt(jTextField1.getText());
            if(numero>=140000000 && numero<150000000){
             tmD1.addRow(fila);
       
            }
            else if(numero>=150000000 && numero<160000000){
             tmD2.addRow(fila);
            }
            else if(numero>=160000000 && numero<170000000){
             tmD3.addRow(fila);
            }
            else if(numero>=170000000 && numero<180000000){
             tmD4.addRow(fila);
            }
            else if(numero<140000000 || numero>=180000000){
             tmD5.addRow(fila);
            }
         }            
         
         
         TableRowSorter sorter = new TableRowSorter(tmD1);
        jTable2.setRowSorter(sorter);    
         TableRowSorter sorter2 = new TableRowSorter(tmD2);
        jTable6.setRowSorter(sorter2); 
         TableRowSorter sorter3 = new TableRowSorter(tmD3);
        jTable7.setRowSorter(sorter3);    
         TableRowSorter sorter4 = new TableRowSorter(tmD4);
        jTable8.setRowSorter(sorter4);    
         TableRowSorter sorter5 = new TableRowSorter(tmD5);
        jTable9.setRowSorter(sorter5);    
        
     }
 }
 else{
     JOptionPane.showMessageDialog(null, "No se encuentra en la Base de datos");
 }
    } 
         
    
    public void pasarDatoFetal(){
/* Asigna tblOrigen y tblDestino para que apunte a los objetos JTable 
   del que necesitas leer los datos */
// tblOrigen = miObjetoJTableDeOrigen;
// tblDestino = miObjetoJTableDeDestino;
/*
   Aquí viene la parte interesante:
   Lee cada fila seleccionada de la tabla de origen 
   y agrégalo a la tabla de destino
 */
    jTable4.selectAll();
 DefaultTableModel tmO = (DefaultTableModel) jTable4.getModel(),
                   tmD1 = (DefaultTableModel) jTable10.getModel(),
                   tmD2 = (DefaultTableModel) jTable11.getModel(),
                   tmD3 = (DefaultTableModel) jTable12.getModel(),
                   tmD4 = (DefaultTableModel) jTable13.getModel(),
                   tmD5 = (DefaultTableModel) jTable14.getModel();
 /* Si utilizas otro TableModel, el tipo de estas variables debe ser el mismo 
    que el TableModel que utilizas.
  */
 // Si tienes filas seleccionadas en la tabla de origen:
 if(jTable4.getSelectedRowCount() > 0) {
     // 1) Obtén los índices de las filas seleccionadas.
     int[] indices = jTable4.getSelectedRows();
     // 2) Para cada fila, crea un Array para guardar los valores... 
     for(int i : indices) {
         Object[] fila = new Object[1];
         // ... y guarda los valores de la fila de origen
            
             fila[0] = jTextField3.getText();
             
        
             //comprovacion si ya se agrego
        String id = jTextField3.getText();
        Boolean aviso = false; 
        
        int e=0;
        for(e = 0; e<jTable10.getRowCount(); e++){
            if(jTable10.getValueAt(e, 0).equals(id)){
            JOptionPane.showMessageDialog(null, "El folio " + id + " ya existe en la tabla.");
            aviso = true;

            }
        }
        for(e = 0; e<jTable11.getRowCount(); e++){
            if(jTable11.getValueAt(e, 0).equals(id)){
            JOptionPane.showMessageDialog(null, "El folio " + id + " ya existe en la tabla.");
            aviso = true;
            }
        }
        for(e = 0; e<jTable12.getRowCount(); e++){
            if(jTable12.getValueAt(e, 0).equals(id)){
            JOptionPane.showMessageDialog(null, "El folio " + id + " ya existe en la tabla.");
            aviso = true;
            }
        }
        for(e = 0; e<jTable13.getRowCount(); e++){
            if(jTable13.getValueAt(e, 0).equals(id)){
            JOptionPane.showMessageDialog(null, "El folio " + id + " ya existe en la tabla.");
            aviso = true;
            }
        }
        for(e = 0; e<jTable14.getRowCount(); e++){
            if(jTable14.getValueAt(e, 0).equals(id)){
            JOptionPane.showMessageDialog(null, "El folio " + id + " ya existe en la tabla.");
            aviso = true;
            }
        }
             
             
             
         // 3) Agrega la fila al TableModel de la tabla de destino
         if(aviso == false){

         int numero=0;
         numero = Integer.parseInt(jTextField3.getText());
            if(numero>=140000000 && numero<150000000){
             tmD1.addRow(fila);
            }
            else if(numero>=150000000 && numero<160000000){
             tmD2.addRow(fila);
            }
            else if(numero>=160000000 && numero<170000000){
             tmD3.addRow(fila);
            }
            else if(numero>=170000000 && numero<180000000){
             tmD4.addRow(fila);
            }
            else if(numero<140000000 || numero>=180000000){
             tmD5.addRow(fila);
            }
         }            
         
         
         TableRowSorter sorter = new TableRowSorter(tmD1);
        jTable10.setRowSorter(sorter);    
         TableRowSorter sorter2 = new TableRowSorter(tmD2);
        jTable11.setRowSorter(sorter2); 
         TableRowSorter sorter3 = new TableRowSorter(tmD3);
        jTable12.setRowSorter(sorter3);    
         TableRowSorter sorter4 = new TableRowSorter(tmD4);
        jTable13.setRowSorter(sorter4);    
         TableRowSorter sorter5 = new TableRowSorter(tmD5);
        jTable14.setRowSorter(sorter5);    
        
     }
 }
 else{
     JOptionPane.showMessageDialog(null, "No se encuentra en la Base de datos");
 }
    }
         
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable10;
    private javax.swing.JTable jTable11;
    private javax.swing.JTable jTable12;
    private javax.swing.JTable jTable13;
    private javax.swing.JTable jTable14;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable8;
    private javax.swing.JTable jTable9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel num;
    private javax.swing.JLabel num2;
    // End of variables declaration//GEN-END:variables
}
